<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>mysql on hello</title>
		<link>https://dtest11.github.io/tags/mysql/</link>
		<description>Recent content in mysql on dtest11.github.io</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<lastBuildDate>Fri, 28 Feb 2020 16:37:53 +0000</lastBuildDate>
		
		<atom:link href="https://dtest11.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>mysql- 索引</title>
			<link>https://dtest11.github.io/mysql/mysql-index/</link>
			<pubDate>Fri, 28 Feb 2020 16:37:53 +0000</pubDate>
			
			<guid>https://dtest11.github.io/mysql/mysql-index/</guid>
			<description>
			
				总结一下mysql 索引的相关内容，复盘重新学习下。
for what 索引是 为了在大量数据中快速查找数据而出现的，
索引实现方式 索引的底层实现有各种各样的方式，最常见的有 哈希表，有序数组，和搜索树.
 哈系表： 这个无需多说，就是输入之后经过hash 然后得到位置，然后从 …
			
			</description>
		</item>
		<item>
			<title>db-index</title>
			<link>https://dtest11.github.io/mysql/db-index/</link>
			<pubDate>Mon, 06 Jan 2020 23:22:35 +0000</pubDate>
			
			<guid>https://dtest11.github.io/mysql/db-index/</guid>
			<description>
			
				一个事务引发的血案 真的是理论永远是理论,只有实践了才知道, 最近在写用户注册的服务,由于用户注册的过程中需要在多张表里面插入数据, 因此我用了事务来做这个,ACID 还是知道的, 但是,坑人的是,这些表的主键都是从一个种子表中取得的, 因此,坑就出现了,在事务中,需要多次从种子 …
			
			</description>
		</item>
		
	</channel>
</rss>
